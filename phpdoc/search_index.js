var search_data = {
    'index': {
        'searchIndex': ["reflectors","reflectors\\abstractreflectionvalue","reflectors\\reflectionarray","reflectors\\reflectionbacktrace","reflectors\\reflectionboolean","reflectors\\reflectionfloat","reflectors\\reflectioninteger","reflectors\\reflectionparametervalue","reflectors\\reflectionresource","reflectors\\reflectionsource","reflectors\\reflectionstring","reflectors\\reflectiontrace","reflectors\\reflectionvaluenull","reflectors\\reflectionvalueunknown","reflectors\\reflectionvariable","reflectors\\reflectionvariableinterface","reflectors\\reflectortrait","reflectors\\abstractreflectionvalue::__construct","reflectors\\abstractreflectionvalue::__tostring","reflectors\\abstractreflectionvalue::getvalue","reflectors\\abstractreflectionvalue::getvaluetype","reflectors\\reflectionarray::__construct","reflectors\\reflectionarray::getarray","reflectors\\reflectionarray::getkeys","reflectors\\reflectionarray::getvalues","reflectors\\reflectionarray::getlength","reflectors\\reflectionarray::haskey","reflectors\\reflectionarray::getitem","reflectors\\reflectionarray::__tostring","reflectors\\reflectionbacktrace::__construct","reflectors\\reflectionbacktrace::getrawtraces","reflectors\\reflectionbacktrace::gettraces","reflectors\\reflectionbacktrace::getlength","reflectors\\reflectionbacktrace::gettrace","reflectors\\reflectionbacktrace::__tostring","reflectors\\reflectionboolean::__construct","reflectors\\reflectionboolean::__tostring","reflectors\\reflectionfloat::__construct","reflectors\\reflectionfloat::__tostring","reflectors\\reflectioninteger::__construct","reflectors\\reflectioninteger::__tostring","reflectors\\reflectionparametervalue::__construct","reflectors\\reflectionparametervalue::getvalue","reflectors\\reflectionparametervalue::getvaluetype","reflectors\\reflectionparametervalue::__tostring","reflectors\\reflectionresource::__construct","reflectors\\reflectionresource::getresourcetype","reflectors\\reflectionresource::__tostring","reflectors\\reflectionsource::__construct","reflectors\\reflectionsource::getpath","reflectors\\reflectionsource::getvalue","reflectors\\reflectionsource::getlineno","reflectors\\reflectionsource::getcontext","reflectors\\reflectionsource::getsource","reflectors\\reflectionsource::__tostring","reflectors\\reflectionstring::__construct","reflectors\\reflectionstring::getstring","reflectors\\reflectionstring::getlength","reflectors\\reflectionstring::__tostring","reflectors\\reflectiontrace::__construct","reflectors\\reflectiontrace::getcalled","reflectors\\reflectiontrace::getobject","reflectors\\reflectiontrace::getclassname","reflectors\\reflectiontrace::getclass","reflectors\\reflectiontrace::getfunctionname","reflectors\\reflectiontrace::getfunction","reflectors\\reflectiontrace::getline","reflectors\\reflectiontrace::getfilename","reflectors\\reflectiontrace::gettype","reflectors\\reflectiontrace::getargs","reflectors\\reflectiontrace::getarguments","reflectors\\reflectiontrace::__tostring","reflectors\\reflectionvaluenull::__construct","reflectors\\reflectionvaluenull::__tostring","reflectors\\reflectionvalueunknown::__construct","reflectors\\reflectionvalueunknown::__tostring","reflectors\\reflectionvariable::__construct","reflectors\\reflectionvariable::getvariable","reflectors\\reflectionvariable::getvalue","reflectors\\reflectionvariable::getvaluetype","reflectors\\reflectionvariable::__tostring","reflectors\\reflectionvariableinterface::getvalue","reflectors\\reflectionvariableinterface::getvaluetype","reflectors\\reflectortrait::export"],
        'info': [["Reflectors","","Reflectors.html","","",3],["AbstractReflectionValue","Reflectors","Reflectors\/AbstractReflectionValue.html","","Class AbstractReflectionValue",1],["ReflectionArray","Reflectors","Reflectors\/ReflectionArray.html"," < AbstractReflectionValue","Class ReflectionArray",1],["ReflectionBacktrace","Reflectors","Reflectors\/ReflectionBacktrace.html","","Class ReflectionBacktrace",1],["ReflectionBoolean","Reflectors","Reflectors\/ReflectionBoolean.html"," < AbstractReflectionValue","Class ReflectionBoolean",1],["ReflectionFloat","Reflectors","Reflectors\/ReflectionFloat.html"," < AbstractReflectionValue","Class ReflectionFloat",1],["ReflectionInteger","Reflectors","Reflectors\/ReflectionInteger.html"," < AbstractReflectionValue","Class ReflectionInteger",1],["ReflectionParameterValue","Reflectors","Reflectors\/ReflectionParameterValue.html"," < ReflectionParameter","Class ReflectionParameterValue",1],["ReflectionResource","Reflectors","Reflectors\/ReflectionResource.html"," < AbstractReflectionValue","Class ReflectionResource",1],["ReflectionSource","Reflectors","Reflectors\/ReflectionSource.html","","Class ReflectionSource",1],["ReflectionString","Reflectors","Reflectors\/ReflectionString.html"," < AbstractReflectionValue","Class ReflectionString",1],["ReflectionTrace","Reflectors","Reflectors\/ReflectionTrace.html","","Class ReflectionTrace",1],["ReflectionValueNull","Reflectors","Reflectors\/ReflectionValueNull.html"," < AbstractReflectionValue","Class ReflectionValueNull",1],["ReflectionValueUnknown","Reflectors","Reflectors\/ReflectionValueUnknown.html"," < AbstractReflectionValue","Class ReflectionValueUnknown",1],["ReflectionVariable","Reflectors","Reflectors\/ReflectionVariable.html","","Class ReflectionVariable",1],["ReflectionVariableInterface","Reflectors","Reflectors\/ReflectionVariableInterface.html","","Interface ReflectionVariableInterface",1],["ReflectorTrait","Reflectors","Reflectors\/ReflectorTrait.html","","Class ReflectorTrait",1],["AbstractReflectionValue::__construct","Reflectors\\AbstractReflectionValue","Reflectors\/AbstractReflectionValue.html#method___construct","(<abbr title=\"Reflectors\\$value\">$value<\/abbr> $value)","Extending classes must define their own constructor",2],["AbstractReflectionValue::__toString","Reflectors\\AbstractReflectionValue","Reflectors\/AbstractReflectionValue.html#method___toString","()","Extending classes must define their own representation",2],["AbstractReflectionValue::getValue","Reflectors\\AbstractReflectionValue","Reflectors\/AbstractReflectionValue.html#method_getValue","()","Returns the current value of concerned variable",2],["AbstractReflectionValue::getValueType","Reflectors\\AbstractReflectionValue","Reflectors\/AbstractReflectionValue.html#method_getValueType","()","Returns the type of the value of concerned variable",2],["ReflectionArray::__construct","Reflectors\\ReflectionArray","Reflectors\/ReflectionArray.html#method___construct","(array $value)","Extending classes must define their own constructor",2],["ReflectionArray::getArray","Reflectors\\ReflectionArray","Reflectors\/ReflectionArray.html#method_getArray","()","Returns the full array itself",2],["ReflectionArray::getKeys","Reflectors\\ReflectionArray","Reflectors\/ReflectionArray.html#method_getKeys","()","Returns the keys of the array",2],["ReflectionArray::getValues","Reflectors\\ReflectionArray","Reflectors\/ReflectionArray.html#method_getValues","()","Returns the values of the array",2],["ReflectionArray::getLength","Reflectors\\ReflectionArray","Reflectors\/ReflectionArray.html#method_getLength","()","Returns the length of the array",2],["ReflectionArray::hasKey","Reflectors\\ReflectionArray","Reflectors\/ReflectionArray.html#method_hasKey","(string|int $index)","Test if a key exists in the array",2],["ReflectionArray::getItem","Reflectors\\ReflectionArray","Reflectors\/ReflectionArray.html#method_getItem","(string|int $index)","Get a specific item of the array",2],["ReflectionArray::__toString","Reflectors\\ReflectionArray","Reflectors\/ReflectionArray.html#method___toString","()","Extending classes must define their own representation",2],["ReflectionBacktrace::__construct","Reflectors\\ReflectionBacktrace","Reflectors\/ReflectionBacktrace.html#method___construct","(array $traces = null, int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT, int $limit)","",2],["ReflectionBacktrace::getRawTraces","Reflectors\\ReflectionBacktrace","Reflectors\/ReflectionBacktrace.html#method_getRawTraces","()","Returns the original backtrace array",2],["ReflectionBacktrace::getTraces","Reflectors\\ReflectionBacktrace","Reflectors\/ReflectionBacktrace.html#method_getTraces","()","Returns the backtrace array with each item as a `\\Reflectors\\ReflectionTrace`",2],["ReflectionBacktrace::getLength","Reflectors\\ReflectionBacktrace","Reflectors\/ReflectionBacktrace.html#method_getLength","()","Returns the length of the backtrace (affected by the",2],["ReflectionBacktrace::getTrace","Reflectors\\ReflectionBacktrace","Reflectors\/ReflectionBacktrace.html#method_getTrace","(int $index)","Returns a specific trace of the backtrace table as",2],["ReflectionBacktrace::__toString","Reflectors\\ReflectionBacktrace","Reflectors\/ReflectionBacktrace.html#method___toString","()","Representation of the object",2],["ReflectionBoolean::__construct","Reflectors\\ReflectionBoolean","Reflectors\/ReflectionBoolean.html#method___construct","(bool $value)","Extending classes must define their own constructor",2],["ReflectionBoolean::__toString","Reflectors\\ReflectionBoolean","Reflectors\/ReflectionBoolean.html#method___toString","()","Extending classes must define their own representation",2],["ReflectionFloat::__construct","Reflectors\\ReflectionFloat","Reflectors\/ReflectionFloat.html#method___construct","(float $value)","Extending classes must define their own constructor",2],["ReflectionFloat::__toString","Reflectors\\ReflectionFloat","Reflectors\/ReflectionFloat.html#method___toString","()","Extending classes must define their own representation",2],["ReflectionInteger::__construct","Reflectors\\ReflectionInteger","Reflectors\/ReflectionInteger.html#method___construct","(int $value)","Extending classes must define their own constructor",2],["ReflectionInteger::__toString","Reflectors\\ReflectionInteger","Reflectors\/ReflectionInteger.html#method___toString","()","Extending classes must define their own representation",2],["ReflectionParameterValue::__construct","Reflectors\\ReflectionParameterValue","Reflectors\/ReflectionParameterValue.html#method___construct","(string $function, string $parameter, mixed $value)","",2],["ReflectionParameterValue::getValue","Reflectors\\ReflectionParameterValue","Reflectors\/ReflectionParameterValue.html#method_getValue","()","Returns the current value of concerned variable",2],["ReflectionParameterValue::getValueType","Reflectors\\ReflectionParameterValue","Reflectors\/ReflectionParameterValue.html#method_getValueType","()","Returns the type of the value of concerned variable",2],["ReflectionParameterValue::__toString","Reflectors\\ReflectionParameterValue","Reflectors\/ReflectionParameterValue.html#method___toString","()","Representation of the object",2],["ReflectionResource::__construct","Reflectors\\ReflectionResource","Reflectors\/ReflectionResource.html#method___construct","(resource $value)","Extending classes must define their own constructor",2],["ReflectionResource::getResourceType","Reflectors\\ReflectionResource","Reflectors\/ReflectionResource.html#method_getResourceType","()","Returns the type of the resource",2],["ReflectionResource::__toString","Reflectors\\ReflectionResource","Reflectors\/ReflectionResource.html#method___toString","()","Extending classes must define their own representation",2],["ReflectionSource::__construct","Reflectors\\ReflectionSource","Reflectors\/ReflectionSource.html#method___construct","(string $value, null $lineno = null, array $context = null)","",2],["ReflectionSource::getPath","Reflectors\\ReflectionSource","Reflectors\/ReflectionSource.html#method_getPath","()","Returns the path of concerned file (alias of `self::getValue()`)",2],["ReflectionSource::getValue","Reflectors\\ReflectionSource","Reflectors\/ReflectionSource.html#method_getValue","()","Returns the path of concerned file",2],["ReflectionSource::getLineNo","Reflectors\\ReflectionSource","Reflectors\/ReflectionSource.html#method_getLineNo","()","Returns the concerned line number (if defined)",2],["ReflectionSource::getContext","Reflectors\\ReflectionSource","Reflectors\/ReflectionSource.html#method_getContext","(null $item = null)","Returns the context or one of its items",2],["ReflectionSource::getSource","Reflectors\\ReflectionSource","Reflectors\/ReflectionSource.html#method_getSource","()","Get the source code of the file in a line-by-line array",2],["ReflectionSource::__toString","Reflectors\\ReflectionSource","Reflectors\/ReflectionSource.html#method___toString","()","Representation of the object",2],["ReflectionString::__construct","Reflectors\\ReflectionString","Reflectors\/ReflectionString.html#method___construct","(string $value)","Extending classes must define their own constructor",2],["ReflectionString::getString","Reflectors\\ReflectionString","Reflectors\/ReflectionString.html#method_getString","()","Returns the current value of the string",2],["ReflectionString::getLength","Reflectors\\ReflectionString","Reflectors\/ReflectionString.html#method_getLength","()","Returns the length of the string",2],["ReflectionString::__toString","Reflectors\\ReflectionString","Reflectors\/ReflectionString.html#method___toString","()","Extending classes must define their own representation",2],["ReflectionTrace::__construct","Reflectors\\ReflectionTrace","Reflectors\/ReflectionTrace.html#method___construct","(array $trace)","",2],["ReflectionTrace::getCalled","Reflectors\\ReflectionTrace","Reflectors\/ReflectionTrace.html#method_getCalled","()","Returns a representation of called method or function",2],["ReflectionTrace::getObject","Reflectors\\ReflectionTrace","Reflectors\/ReflectionTrace.html#method_getObject","()","Returns the object if defined",2],["ReflectionTrace::getClassName","Reflectors\\ReflectionTrace","Reflectors\/ReflectionTrace.html#method_getClassName","()","Returns the class name if defined",2],["ReflectionTrace::getClass","Reflectors\\ReflectionTrace","Reflectors\/ReflectionTrace.html#method_getClass","()","Returns the class as a `\\ReflectionClass` object if",2],["ReflectionTrace::getFunctionName","Reflectors\\ReflectionTrace","Reflectors\/ReflectionTrace.html#method_getFunctionName","()","Returns the function name if defined",2],["ReflectionTrace::getFunction","Reflectors\\ReflectionTrace","Reflectors\/ReflectionTrace.html#method_getFunction","()","Returns the class as a `\\ReflectionFunction` or `\\ReflectionMethod`",2],["ReflectionTrace::getLine","Reflectors\\ReflectionTrace","Reflectors\/ReflectionTrace.html#method_getLine","()","Returns concerned line if defined",2],["ReflectionTrace::getFileName","Reflectors\\ReflectionTrace","Reflectors\/ReflectionTrace.html#method_getFileName","()","Returns concerned file if defined",2],["ReflectionTrace::getType","Reflectors\\ReflectionTrace","Reflectors\/ReflectionTrace.html#method_getType","()","Returns concerned type if defined",2],["ReflectionTrace::getArgs","Reflectors\\ReflectionTrace","Reflectors\/ReflectionTrace.html#method_getArgs","()","Returns the trace arguments as the original array",2],["ReflectionTrace::getArguments","Reflectors\\ReflectionTrace","Reflectors\/ReflectionTrace.html#method_getArguments","()","Returns the trace arguments as an array of `\\Reflectors\\ReflectionParameterValue`",2],["ReflectionTrace::__toString","Reflectors\\ReflectionTrace","Reflectors\/ReflectionTrace.html#method___toString","()","Representation of the object",2],["ReflectionValueNull::__construct","Reflectors\\ReflectionValueNull","Reflectors\/ReflectionValueNull.html#method___construct","(null $value)","Extending classes must define their own constructor",2],["ReflectionValueNull::__toString","Reflectors\\ReflectionValueNull","Reflectors\/ReflectionValueNull.html#method___toString","()","Extending classes must define their own representation",2],["ReflectionValueUnknown::__construct","Reflectors\\ReflectionValueUnknown","Reflectors\/ReflectionValueUnknown.html#method___construct","(<abbr title=\"Reflectors\\?\">?<\/abbr> $value)","Extending classes must define their own constructor",2],["ReflectionValueUnknown::__toString","Reflectors\\ReflectionValueUnknown","Reflectors\/ReflectionValueUnknown.html#method___toString","()","Extending classes must define their own representation",2],["ReflectionVariable::__construct","Reflectors\\ReflectionVariable","Reflectors\/ReflectionVariable.html#method___construct","(mixed $value)","",2],["ReflectionVariable::getVariable","Reflectors\\ReflectionVariable","Reflectors\/ReflectionVariable.html#method_getVariable","()","Returns the variable reflector",2],["ReflectionVariable::getValue","Reflectors\\ReflectionVariable","Reflectors\/ReflectionVariable.html#method_getValue","()","Returns the current value of concerned variable",2],["ReflectionVariable::getValueType","Reflectors\\ReflectionVariable","Reflectors\/ReflectionVariable.html#method_getValueType","()","Returns the type of the value of concerned variable",2],["ReflectionVariable::__toString","Reflectors\\ReflectionVariable","Reflectors\/ReflectionVariable.html#method___toString","()","Representation of the object",2],["ReflectionVariableInterface::getValue","Reflectors\\ReflectionVariableInterface","Reflectors\/ReflectionVariableInterface.html#method_getValue","()","Returns the current value of concerned variable",2],["ReflectionVariableInterface::getValueType","Reflectors\\ReflectionVariableInterface","Reflectors\/ReflectionVariableInterface.html#method_getValueType","()","Returns the type of the value of concerned variable",2],["ReflectorTrait::export","Reflectors\\ReflectorTrait","Reflectors\/ReflectorTrait.html#method_export","(mixed $arg, bool $return = false)","Creation of a new instance of the mother class on-the-fly",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']